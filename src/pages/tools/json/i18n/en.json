{
  "prettify": {
    "title": "Prettify JSON",
    "description": "Format JSON with proper indentation and spacing.",
    "inputTitle": "Input JSON",
    "resultTitle": "Prettified JSON",
    "indentation": "Indentation",
    "useSpaces": "Use Spaces",
    "useSpacesDescription": "Indent output with spaces",
    "useTabs": "Use Tabs",
    "useTabsDescription": "Indent output with tabs.",
    "toolInfo": {
      "title": "Prettify JSON",
      "description": "This tool allows you to format JSON data with proper indentation and spacing, making it more readable and easier to work with."
    },
    "title": "Prettify JSON",
    "shortDescription": "Format and beautify JSON code"
  },
  "minify": {
    "title": "Minify JSON",
    "description": "Remove all unnecessary whitespace from JSON.",
    "inputTitle": "Input JSON",
    "resultTitle": "Minified JSON",
    "toolInfo": {
      "title": "What Is JSON Minification?",
      "description": "JSON minification is the process of removing all unnecessary whitespace characters from JSON data while maintaining its validity. This includes removing spaces, newlines, and indentation that aren't required for the JSON to be parsed correctly. Minification reduces the size of JSON data, making it more efficient for storage and transmission while keeping the exact same data structure and values."
    },
    "title": "Minify JSON",
    "shortDescription": "Minify JSON by removing whitespace"
  },
  "validateJson": {
    "title": "Validate JSON",
    "description": "Check if JSON is valid and well-formed.",
    "inputTitle": "Input JSON",
    "resultTitle": "Validation Result",
    "validJson": "✅ Valid JSON",
    "invalidJson": "❌ {{error}}",
    "toolInfo": {
      "title": "What is JSON Validation?",
      "description": "JSON (JavaScript Object Notation) is a lightweight data-interchange format. JSON validation ensures that the structure of the data conforms to the JSON standard. A valid JSON object must have: - Property names enclosed in double quotes. - Properly balanced curly braces {}. - No trailing commas after the last key-value pair. - Proper nesting of objects and arrays. This tool checks the input JSON and provides feedback to help identify and fix common errors."
    },
    "title": "Validate JSON",
    "shortDescription": "Validate JSON code for errors"
  },
  "escapeJson": {
    "title": "Escape JSON",
    "description": "Escape special characters in JSON strings. Convert JSON data to properly escaped format for safe transmission or storage.",
    "shortDescription": "Escape special characters in JSON"
  },
  "jsonToXml": {
    "title": "JSON to XML",
    "description": "Convert JSON data to XML format. Transform structured JSON objects into well-formed XML documents.",
    "shortDescription": "Convert JSON to XML format"
  },
  "stringify": {
    "title": "Stringify JSON",
    "description": "Convert JavaScript objects to JSON string format. Serialize data structures into JSON strings for storage or transmission.",
    "shortDescription": "Convert objects to JSON string"
  },
  "tsvToJson": {
    "title": "TSV to JSON",
    "description": "Convert TSV (Tab-Separated Values) data to JSON format. Transform tabular data into structured JSON objects.",
    "shortDescription": "Convert TSV to JSON format"
  }
}
